local fov = 27
local uiScale = 1
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local Cam = workspace.CurrentCamera
local Player = Players.LocalPlayer

local FOVring = Drawing.new("Circle")
FOVring.Visible = false
FOVring.Thickness = 1.5
FOVring.Color = Color3.fromRGB(100, 150, 255)
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2

local isAiming = false
local isBlatant = false
local isMenuOpen = false
local isESPEnabled = false
local currentTab = "Aim"
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

-- UI Colors
local accentColor = Color3.fromRGB(100, 150, 255)
local backgroundColor = Color3.fromRGB(25, 25, 30)
local elementColor = Color3.fromRGB(35, 35, 40)
local textColor = Color3.fromRGB(255, 255, 255)

-- Tabel untuk menyimpan highlight dan billboard
local ESPObjects = {}

-- Create main UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "AimbotUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true

-- Toggle button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 50, 0, 50)
ToggleButton.Position = UDim2.new(0, 20, 0, 20)
ToggleButton.BackgroundColor3 = elementColor
ToggleButton.BackgroundTransparency = 0.1
ToggleButton.Text = "⚙"
ToggleButton.TextColor3 = textColor
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 24
ToggleButton.BorderSizePixel = 0
ToggleButton.ZIndex = 2
ToggleButton.Active = true
ToggleButton.Draggable = true
ToggleButton.Parent = ScreenGui

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(1, 0)
ToggleCorner.Parent = ToggleButton

-- Main menu frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 260)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -130)
MainFrame.BackgroundColor3 = backgroundColor
MainFrame.BackgroundTransparency = 0.05
MainFrame.BorderSizePixel = 0
MainFrame.Visible = false
MainFrame.ZIndex = 2
MainFrame.Parent = ScreenGui

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

-- Add shadow
local MainShadow = Instance.new("Frame")
MainShadow.Size = UDim2.new(1, 8, 1, 8)
MainShadow.Position = UDim2.new(0, -4, 0, -4)
MainShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainShadow.BackgroundTransparency = 0.7
MainShadow.BorderSizePixel = 0
MainShadow.ZIndex = 1
MainShadow.Parent = MainFrame

local ShadowCorner = Instance.new("UICorner")
ShadowCorner.CornerRadius = UDim.new(0, 16)
ShadowCorner.Parent = MainShadow

-- Header
local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, 0, 0, 40)
Header.Position = UDim2.new(0, 0, 0, 0)
Header.BackgroundColor3 = elementColor
Header.BorderSizePixel = 0
Header.ZIndex = 3
Header.Parent = MainFrame

local HeaderCorner = Instance.new("UICorner")
HeaderCorner.CornerRadius = UDim.new(0, 12)
HeaderCorner.Parent = Header

local HeaderFix = Instance.new("Frame")
HeaderFix.Size = UDim2.new(1, 0, 0, 12)
HeaderFix.Position = UDim2.new(0, 0, 1, -12)
HeaderFix.BackgroundColor3 = elementColor
HeaderFix.BorderSizePixel = 0
HeaderFix.ZIndex = 3
HeaderFix.Parent = Header

-- Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -40, 1, 0)
Title.Position = UDim2.new(0, 16, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Aimbot & ESP"
Title.TextColor3 = textColor
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.ZIndex = 4
Title.Parent = Header

-- Close button
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0.5, -15)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
CloseButton.Text = "×"
CloseButton.TextColor3 = textColor
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 18
CloseButton.BorderSizePixel = 0
CloseButton.ZIndex = 4
CloseButton.Parent = Header

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(1, 0)
CloseCorner.Parent = CloseButton

-- Tab buttons
local TabContainer = Instance.new("Frame")
TabContainer.Size = UDim2.new(1, -32, 0, 30)
TabContainer.Position = UDim2.new(0, 16, 0, 45)
TabContainer.BackgroundTransparency = 1
TabContainer.ZIndex = 3
TabContainer.Parent = MainFrame

local AimTab = Instance.new("TextButton")
AimTab.Size = UDim2.new(0.5, -4, 1, 0)
AimTab.Position = UDim2.new(0, 0, 0, 0)
AimTab.BackgroundColor3 = accentColor
AimTab.Text = "Aim"
AimTab.Text, Color3 = textColor
AimTab.Font = Enum.Font.GothamSemibold
AimTab.TextSize = 14
AimTab.BorderSizePixel = 0
AimTab.ZIndex = 4
AimTab.Parent = TabContainer

local AimTabCorner = Instance.new("UICorner")
AimTabCorner.CornerRadius = UDim.new(0, 6)
AimTabCorner.Parent = AimTab

local SettingsTab = Instance.new("TextButton")
SettingsTab.Size = UDim2.new(0.5, -4, 1, 0)
SettingsTab.Position = UDim2.new(0.5, 4, 0, 0)
SettingsTab.BackgroundColor3 = elementColor
SettingsTab.Text = "Settings"
SettingsTab.TextColor3 = textColor
SettingsTab.Font = Enum.Font.GothamSemibold
SettingsTab.TextSize = 14
SettingsTab.BorderSizePixel = 0
SettingsTab.ZIndex = 4
SettingsTab.Parent = TabContainer

local SettingsTabCorner = Instance.new("UICorner")
SettingsTabCorner.CornerRadius = UDim.new(0, 6)
SettingsTabCorner.Parent = SettingsTab

-- Content frames
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, -32, 1, -90)
ContentFrame.Position = UDim2.new(0, 16, 0, 80)
ContentFrame.BackgroundTransparency = 1
ContentFrame.ZIndex = 3
ContentFrame.Parent = MainFrame

-- Aim content
local AimContent = Instance.new("Frame")
AimContent.Size = UDim2.new(1, 0, 1, 0)
AimContent.Position = UDim2.new(0, 0, 0, 0)
AimContent.BackgroundTransparency = 1
AimContent.Visible = true
AimContent.ZIndex = 3
AimContent.Parent = ContentFrame

-- Aimbot toggle
local AimbotToggle = Instance.new("TextButton")
AimbotToggle.Size = UDim2.new(1, 0, 0, 40)
AimbotToggle.Position = UDim2.new(0, 0, 0, 0)
AimbotToggle.BackgroundColor3 = elementColor
AimbotToggle.Text = "Aimbot: OFF"
AimbotToggle.TextColor3 = textColor
AimbotToggle.Font = Enum.Font.GothamSemibold
AimbotToggle.TextSize = 14
AimbotToggle.BorderSizePixel = 0
AimbotToggle.ZIndex = 4
AimbotToggle.Parent = AimContent

local AimbotToggleCorner = Instance.new("UICorner")
AimbotToggleCorner.CornerRadius = UDim.new(0, 6)
AimbotToggleCorner.Parent = AimbotToggle

-- Blatant toggle
local BlatantToggle = Instance.new("TextButton")
BlatantToggle.Size = UDim2.new(1, 0, 0, 40)
BlatantToggle.Position = UDim2.new(0, 0, 0, 50)
BlatantToggle.BackgroundColor3 = elementColor
BlatantToggle.Text = "Blatant Mode: OFF"
BlatantToggle.TextColor3 = textColor
BlatantToggle.Font = Enum.Font.GothamSemibold
BlatantToggle.TextSize = 14
BlatantToggle.BorderSizePixel = 0
BlatantToggle.ZIndex = 4
BlatantToggle.Parent = AimContent

local BlatantToggleCorner = Instance.new("UICorner")
BlatantToggleCorner.CornerRadius = UDim.new(0, 6)
BlatantToggleCorner.Parent = BlatantToggle

-- ESP toggle
local ESPToggle = Instance.new("TextButton")
ESPToggle.Size = UDim2.new(1, 0, 0, 40)
ESPToggle.Position = UDim2.new(0, 0, 0, 100)
ESPToggle.BackgroundColor3 = elementColor
ESPToggle.Text = "ESP: OFF"
ESPToggle.TextColor3 = textColor
ESPToggle.Font = Enum.Font.GothamSemibold
ESPToggle.TextSize = 14
ESPToggle.BorderSizePixel = 0
ESPToggle.ZIndex = 4
ESPToggle.Parent = AimContent

local ESPToggleCorner = Instance.new("UICorner")
ESPToggleCorner.CornerRadius = UDim.new(0, 6)
ESPToggleCorner.Parent = ESPToggle

-- FOV slider
local FOVContainer = Instance.new("Frame")
FOVContainer.Size = UDim2.new(1, 0, 0, 60)
FOVContainer.Position = UDim2.new(0, 0, 0, 150)
FOVContainer.BackgroundTransparency = 1
FOVContainer.ZIndex = 3
FOVContainer.Parent = AimContent

local FOVLabel = Instance.new("TextLabel")
FOVLabel.Size = UDim2.new(1, 0, 0, 20)
FOVLabel.Position = UDim2.new(0, 0, 0, 0)
FOVLabel.BackgroundTransparency = 1
FOVLabel.Text = "FOV: 27"
FOVLabel.TextColor3 = textColor
FOVLabel.Font = Enum.Font.Gotham
FOVLabel.TextSize = 14
FOVLabel.TextXAlignment = Enum.TextXAlignment.Left
FOVLabel.ZIndex = 4
FOVLabel.Parent = FOVContainer

local SliderTrack = Instance.new("Frame")
SliderTrack.Size = UDim2.new(1, 0, 0, 6)
SliderTrack.Position = UDim2.new(0, 0, 0, 30)
SliderTrack.BackgroundColor3 = elementColor
SliderTrack.BorderSizePixel = 0
SliderTrack.ZIndex = 4
SliderTrack.Parent = FOVContainer

local TrackCorner = Instance.new("UICorner")
TrackCorner.CornerRadius = UDim.new(0, 3)
TrackCorner.Parent = SliderTrack

local SliderFill = Instance.new("Frame")
SliderFill.Size = UDim2.new(0, 0, 1, 0)
SliderFill.Position = UDim2.new(0, 0, 0, 0)
SliderFill.BackgroundColor3 = accentColor
SliderFill.BorderSizePixel = 0
SliderFill.ZIndex = 5
SliderFill.Parent = SliderTrack

local FillCorner = Instance.new("UICorner")
FillCorner.CornerRadius = UDim.new(0, 3)
FillCorner.Parent = SliderFill

local SliderKnob = Instance.new("Frame")
SliderKnob.Size = UDim2.new(0, 16, 0, 16)
SliderKnob.Position = UDim2.new(0, -8, 0.5, -8)
SliderKnob.BackgroundColor3 = textColor
SliderKnob.BorderSizePixel = 0
SliderKnob.ZIndex = 6
SliderKnob.Parent = SliderTrack

local KnobCorner = Instance.new("UICorner")
KnobCorner.CornerRadius = UDim.new(1, 0)
KnobCorner.Parent = SliderKnob

local SliderButton = Instance.new("TextButton")
SliderButton.Size = UDim2.new(1, 20, 1, 20)
SliderButton.Position = UDim2.new(0, -10, 0, -10)
SliderButton.BackgroundTransparency = 1
SliderButton.Text = ""
SliderButton.ZIndex = 7
SliderButton.Parent = SliderTrack

-- Settings content
local SettingsContent = Instance.new("Frame")
SettingsContent.Size = UDim2.new(1, 0, 1, 0)
SettingsContent.Position = UDim2.new(0, 0, 0, 0)
SettingsContent.BackgroundTransparency = 1
SettingsContent.Visible = false
SettingsContent.ZIndex = 3
SettingsContent.Parent = ContentFrame

local UIHeader = Instance.new("TextLabel")
UIHeader.Size = UDim2.new(1, 0, 0, 20)
UIHeader.Position = UDim2.new(0, 0, 0, 0)
UIHeader.BackgroundTransparency = 1
UIHeader.Text = "UI Settings"
UIHeader.TextColor3 = textColor
UIHeader.Font = Enum.Font.GothamSemibold
UIHeader.TextSize = 14
UIHeader.TextXAlignment = Enum.TextXAlignment.Left
UIHeader.ZIndex = 4
UIHeader.Parent = SettingsContent

-- UI Size slider
local UISizeContainer = Instance.new("Frame")
UISizeContainer.Size = UDim2.new(1, 0, 0, 60)
UISizeContainer.Position = UDim2.new(0, 0, 0, 25)
UISizeContainer.BackgroundTransparency = 1
UISizeContainer.ZIndex = 3
UISizeContainer.Parent = SettingsContent

local UISizeLabel = Instance.new("TextLabel")
UISizeLabel.Size = UDim2.new(1, 0, 0, 20)
UISizeLabel.Position = UDim2.new(0, 0, 0, 0)
UISizeLabel.BackgroundTransparency = 1
UISizeLabel.Text = "UI Size: 100%"
UISizeLabel.TextColor3 = textColor
UISizeLabel.Font = Enum.Font.Gotham
UISizeLabel.TextSize = 14
UISizeLabel.TextXAlignment = Enum.TextXAlignment.Left
UISizeLabel.ZIndex = 4
UISizeLabel.Parent = UISizeContainer

local UISizeSliderTrack = Instance.new("Frame")
UISizeSliderTrack.Size = UDim2.new(1, 0, 0, 6)
UISizeSliderTrack.Position = UDim2.new(0, 0, 0, 30)
UISizeSliderTrack.BackgroundColor3 = elementColor
UISizeSliderTrack.BorderSizePixel = 0
UISizeSliderTrack.ZIndex = 4
UISizeSliderTrack.Parent = UISizeContainer

local UISizeTrackCorner = Instance.new("UICorner")
UISizeTrackCorner.CornerRadius = UDim.new(0, 3)
UISizeTrackCorner.Parent = UISizeSliderTrack

local UISizeSliderFill = Instance.new("Frame")
UISizeSliderFill.Size = UDim2.new(1, 0, 1, 0)
UISizeSliderFill.Position = UDim2.new(0, 0, 0, 0)
UISizeSliderFill.BackgroundColor3 = accentColor
UISizeSliderFill.BorderSizePixel = 0
UISizeSliderFill.ZIndex = 5
UISizeSliderFill.Parent = UISizeSliderTrack

local UISizeFillCorner = Instance.new("UICorner")
UISizeFillCorner.CornerRadius = UDim.new(0, 3)
UISizeFillCorner.Parent = UISizeSliderFill

local UISizeSliderKnob = Instance.new("Frame")
UISizeSliderKnob.Size = UDim2.new(0, 16, 0, 16)
UISizeSliderKnob.Position = UDim2.new(1, -8, 0.5, -8)
UISizeSliderKnob.BackgroundColor3 = textColor
UISizeSliderKnob.BorderSizePixel = 0
UISizeSliderKnob.ZIndex = 6
UISizeSliderKnob.Parent = UISizeSliderTrack

local UISizeKnobCorner = Instance.new("UICorner")
UISizeKnobCorner.CornerRadius = UDim.new(1, 0)
UISizeKnobCorner.Parent = UISizeSliderKnob

local UISizeSliderButton = Instance.new("TextButton")
UISizeSliderButton.Size = UDim2.new(1, 20, 1, 20)
UISizeSliderButton.Position = UDim2.new(0, -10, 0, -10)
UISizeSliderButton.BackgroundTransparency = 1
UISizeSliderButton.Text = ""
UISizeSliderButton.ZIndex = 7
UISizeSliderButton.Parent = UISizeSliderTrack

-- Color picker
local ColorContainer = Instance.new("Frame")
ColorContainer.Size = UDim2.new(1, 0, 0, 30)
ColorContainer.Position = UDim2.new(0, 0, 0, 90)
ColorContainer.BackgroundTransparency = 1
ColorContainer.ZIndex = 3
ColorContainer.Parent = SettingsContent

local ColorLabel = Instance.new("TextLabel")
ColorLabel.Size = UDim2.new(0, 60, 1, 0)
ColorLabel.Position = UDim2.new(0, 0, 0, 0)
ColorLabel.BackgroundTransparency = 1
ColorLabel.Text = "UI Color:"
ColorLabel.TextColor3 = textColor
ColorLabel.Font = Enum.Font.Gotham
ColorLabel.TextSize = 14
ColorLabel.TextXAlignment = Enum.TextXAlignment.Left
ColorLabel.ZIndex = 4
ColorLabel.Parent = ColorContainer

local ColorPreview = Instance.new("Frame")
ColorPreview.Size = UDim2.new(0, 60, 0, 30)
ColorPreview.Position = UDim2.new(0.5, 0, 0, 0)
ColorPreview.BackgroundColor3 = accentColor
ColorPreview.BorderSizePixel = 0
ColorPreview.ZIndex = 4
ColorPreview.Parent = ColorContainer

local ColorPreviewCorner = Instance.new("UICorner")
ColorPreviewCorner.CornerRadius = UDim.new(0, 6)
ColorPreviewCorner.Parent = ColorPreview

-- Variables
local minFOV = 0
local maxFOV = 200
local minUISize = 0.5
local maxUISize = 1.5
local isDraggingFOV = false
local isDraggingUISize = false

-- ESP Functions
local function createESP(player)
    if player == Player or not player.Character then return end
    local character = player.Character
    local humanoid = character:FindFirstChild("Humanoid")
    local head = character:FindFirstChild("Head")
    if not humanoid or not head then return end

    -- Create Highlight dengan AlwaysOnTop untuk menembus tembok
    local highlight = Instance.new("Highlight", character)
    highlight.FillColor = (player.TeamColor and player.TeamColor.Color) or Color3.fromRGB(255, 48, 51)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop

    -- Create BillboardGui
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESPBillboard"
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 100, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = character

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.Position = UDim2.new(0, 0, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = textColor
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextSize = 14
    nameLabel.TextStrokeTransparency = 0.5
    nameLabel.Parent = billboard

    local healthLabel = Instance.new("TextLabel")
    healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
    healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
    healthLabel.BackgroundTransparency = 1
    healthLabel.Text = math.floor(humanoid.Health) .. "/" .. humanoid.MaxHealth
    healthLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    healthLabel.Font = Enum.Font.Gotham
    healthLabel.TextSize = 12
    healthLabel.TextStrokeTransparency = 0.5
    healthLabel.Parent = billboard

    ESPObjects[player] = {highlight = highlight, billboard = billboard}

    -- Update health dan team color
    local connections = {}
    table.insert(connections, player:GetPropertyChangedSignal("TeamColor"):Connect(function()
        highlight.FillColor = (player.TeamColor and player.TeamColor.Color) or Color3.fromRGB(255, 48, 51)
    end))
    table.insert(connections, humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        healthLabel.Text = math.floor(humanoid.Health) .. "/" .. humanoid.MaxHealth
        healthLabel.TextColor3 = humanoid.Health > 50 and Color3.fromRGB(100, 255, 100) or 
                                humanoid.Health > 20 and Color3.fromRGB(255, 255, 100) or 
                                Color3.fromRGB(255, 100, 100)
        if humanoid.Health <= 0 then
            if ESPObjects[player] then
                ESPObjects[player].highlight:Destroy()
                ESPObjects[player].billboard:Destroy()
                ESPObjects[player] = nil
                for _, conn in ipairs(connections) do
                    conn:Disconnect()
                end
            end
        end
    end))

    -- Handle respawn karakter
    player.CharacterAdded:Connect(function(newChar)
        if ESPObjects[player] then
            ESPObjects[player].highlight:Destroy()
            ESPObjects[player].billboard:Destroy()
            ESPObjects[player] = nil
        end
        if isESPEnabled then
            createESP(player)
        end
    end)
end

local function toggleESP()
    isESPEnabled = not isESPEnabled
    ESPToggle.Text = "ESP: " .. (isESPEnabled and "ON" or "OFF")
    ESPToggle.BackgroundColor3 = isESPEnabled and accentColor or elementColor

    if isESPEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            createESP(player)
        end
    else
        for _, esp in pairs(ESPObjects) do
            esp.highlight:Destroy()
            esp.billboard:Destroy()
        end
        ESPObjects = {}
    end
end

-- Animation Functions
local function animateMenu(state)
    MainFrame.Visible = true
    local targetSize = state and UDim2.new(0, 300 * uiScale, 0, 260 * uiScale) or UDim2.new(0, 0, 0, 0)
    local targetTransparency = state and 0.05 or 1
    TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
        {Size = targetSize, BackgroundTransparency = targetTransparency}):Play()
    TweenService:Create(MainShadow, TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
        {BackgroundTransparency = state and 0.7 or 1}):Play()
    if not state then
        wait(0.3)
        MainFrame.Visible = false
    end
end

local function switchTab(tab)
    currentTab = tab
    AimContent.Visible = (tab == "Aim")
    SettingsContent.Visible = (tab == "Settings")
    AimTab.BackgroundColor3 = (tab == "Aim") and accentColor or elementColor
    SettingsTab.BackgroundColor3 = (tab == "Settings") and accentColor or elementColor
end

-- Targeting Functions
local function getValidPlayers()
    local validPlayers = {}
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= Player and 
           otherPlayer.Character and 
           otherPlayer.Character:FindFirstChild("Humanoid") and
           otherPlayer.Character.Humanoid.Health > 0 and
           otherPlayer.Character:FindFirstChild("Head") and
           otherPlayer.Team ~= Player.Team then -- Hanya targetkan tim berbeda
            table.insert(validPlayers, otherPlayer.Character)
        end
    end
    return validPlayers
end

local function predictPos(target)
    local head = target:FindFirstChild("Head")
    if not head then return nil end
    if isBlatant then
        return head.Position
    end
    local rootPart = target:FindFirstChild("HumanoidRootPart")
    if not rootPart then return head.Position end
    local velocity = rootPart.Velocity
    local predictionTime = 0.02
    return head.Position + velocity * predictionTime
end

local function getTarget()
    local nearest = nil
    local minDistance = math.huge
    local viewportCenter = Cam.ViewportSize / 2
    raycastParams.FilterDescendantsInstances = {Player.Character}
    
    for _, playerChar in ipairs(getValidPlayers()) do
        local predictedPos = predictPos(playerChar)
        if predictedPos then
            local screenPos, visible = Cam:WorldToViewportPoint(predictedPos)
            if visible and screenPos.Z > 0 then
                local ray = workspace:Raycast(Cam.CFrame.Position, (predictedPos - Cam.CFrame.Position).Unit * 1000, raycastParams)
                if ray and ray.Instance:IsDescendantOf(playerChar) then
                    local distance = (Vector2.new(screenPos.X, screenPos.Y) - viewportCenter).Magnitude
                    if distance < fov and distance < minDistance then
                        minDistance = distance
                        nearest = playerChar
                    end
                end
            end
        end
    end
    return nearest
end

local function aim(targetPosition)
    local currentCF = Cam.CFrame
    if isBlatant then
        Cam.CFrame = CFrame.new(currentCF.Position, targetPosition)
    else
        local targetDirection = (targetPosition - currentCF.Position).Unit
        local smoothFactor = 0.3
        local newLookVector = currentCF.LookVector:Lerp(targetDirection, smoothFactor)
        Cam.CFrame = CFrame.new(currentCF.Position, currentCF.Position + newLookVector)
    end
end

-- UI Functions
local function updateFOV(newFOV)
    fov = math.clamp(newFOV, minFOV, maxFOV)
    FOVring.Radius = fov
    FOVLabel.Text = "FOV: " .. math.floor(fov)
    local sliderPos = (fov - minFOV) / (maxFOV - minFOV)
    TweenService:Create(SliderFill, TweenInfo.new(0.1), {Size = UDim2.new(sliderPos, 0, 1, 0)}):Play()
    TweenService:Create(SliderKnob, TweenInfo.new(0.1), {Position = UDim2.new(sliderPos, -8, 0.5, -8)}):Play()
end

local function updateUISize(newScale)
    uiScale = math.clamp(newScale, minUISize, maxUISize)
    MainFrame.Size = UDim2.new(0, 300 * uiScale, 0, 260 * uiScale)
    MainFrame.Position = UDim2.new(0.5, -150 * uiScale, 0.5, -130 * uiScale)
    UISizeLabel.Text = "UI Size: " .. math.floor(uiScale * 100) .. "%"
    local sliderPos = (uiScale - minUISize) / (maxUISize - minUISize)
    TweenService:Create(UISizeSliderFill, TweenInfo.new(0.1), {Size = UDim2.new(sliderPos, 0, 1, 0)}):Play()
    TweenService:Create(UISizeSliderKnob, TweenInfo.new(0.1), {Position = UDim2.new(sliderPos, -8, 0.5, -8)}):Play()
end

local function toggleAimbot()
    isAiming = not isAiming
    AimbotToggle.Text = "Aimbot: " .. (isAiming and "ON" or "OFF")
    AimbotToggle.BackgroundColor3 = isAiming and accentColor or elementColor
    FOVring.Visible = isAiming
end

local function toggleBlatant()
    isBlatant = not isBlatant
    BlatantToggle.Text = "Blatant Mode: " .. (isBlatant and "ON" or "OFF")
    BlatantToggle.BackgroundColor3 = isBlatant and accentColor or elementColor
end

-- Event Connections
ToggleButton.MouseButton1Click:Connect(function()
    isMenuOpen = not isMenuOpen
    animateMenu(isMenuOpen)
end)

CloseButton.MouseButton1Click:Connect(function()
    isMenuOpen = false
    animateMenu(false)
end)

AimTab.MouseButton1Click:Connect(function()
    switchTab("Aim")
end)

SettingsTab.MouseButton1Click:Connect(function()
    switchTab("Settings")
end)

AimbotToggle.MouseButton1Click:Connect(toggleAimbot)
BlatantToggle.MouseButton1Click:Connect(toggleBlatant)
ESPToggle.MouseButton1Click:Connect(toggleESP)

SliderButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDraggingFOV = true
        local inputX = input.Position.X
        local trackX = SliderTrack.AbsolutePosition.X
        local trackWidth = SliderTrack.AbsoluteSize.X
        local relativeX = math.clamp(inputX - trackX, 0, trackWidth)
        local newFOV = minFOV + (relativeX / trackWidth) * (maxFOV - minFOV)
        updateFOV(newFOV)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if isDraggingFOV and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local inputX = input.Position.X
        local trackX = SliderTrack.AbsolutePosition.X
        local trackWidth = SliderTrack.AbsoluteSize.X
        local relativeX = math.clamp(inputX - trackX, 0, trackWidth)
        local newFOV = minFOV + (relativeX / trackWidth) * (maxFOV - minFOV)
        updateFOV(newFOV)
    elseif isDraggingUISize and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local inputX = input.Position.X
        local trackX = UISizeSliderTrack.AbsolutePosition.X
        local trackWidth = UISizeSliderTrack.AbsoluteSize.X
        local relativeX = math.clamp(inputX - trackX, 0, trackWidth)
        local newScale = minUISize + (relativeX / trackWidth) * (maxUISize - minUISize)
        updateUISize(newScale)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDraggingFOV = false
        isDraggingUISize = false
    end
end)

UISizeSliderButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDraggingUISize = true
        local inputX = input.Position.X
        local trackX = UISizeSliderTrack.AbsolutePosition.X
        local trackWidth = UISizeSliderTrack.AbsoluteSize.X
        local relativeX = math.clamp(inputX - trackX, 0, trackWidth)
        local newScale = minUISize + (relativeX / trackWidth) * (maxUISize - minUISize)
        updateUISize(newScale)
    end
end)

-- Color picker
local presetColors = {
    Color3.fromRGB(100, 150, 255),
    Color3.fromRGB(255, 100, 100),
    Color3.fromRGB(100, 255, 100),
    Color3.fromRGB(255, 255, 100)
}
local currentColorIndex = 1

ColorPreview.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        currentColorIndex = (currentColorIndex % #presetColors) + 1
        accentColor = presetColors[currentColorIndex]
        ColorPreview.BackgroundColor3 = accentColor
        FOVring.Color = accentColor
        SliderFill.BackgroundColor3 = accentColor
        UISizeSliderFill.BackgroundColor3 = accentColor
        AimTab.BackgroundColor3 = (currentTab == "Aim") and accentColor or elementColor
        AimbotToggle.BackgroundColor3 = isAiming and accentColor or elementColor
        BlatantToggle.BackgroundColor3 = isBlatant and accentColor or elementColor
        ESPToggle.BackgroundColor3 = isESPEnabled and accentColor or elementColor
    end
end)

-- Initialize ESP for new players
Players.PlayerAdded:Connect(function(player)
    if isESPEnabled then
        createESP(player)
    end
end)

-- Main Loop
RunService.Heartbeat:Connect(function()
    pcall(function()
        FOVring.Position = Cam.ViewportSize / 2
        FOVring.Radius = fov * (Cam.ViewportSize.Y / 1080)
        
        if isAiming then
            local target = getTarget()
            if target then
                local predictedPosition = predictPos(target)
                if predictedPosition then
                    aim(predictedPosition)
                end
            end
        end
    end)
end)

-- Initialize
updateFOV(fov)
updateUISize(uiScale)
switchTab("Aim")

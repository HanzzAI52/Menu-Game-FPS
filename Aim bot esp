local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local fov = 27
local uiScale = 1
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Cam = workspace.CurrentCamera
local Player = Players.LocalPlayer

local FOVring = Drawing.new("Circle")
FOVring.Visible = false
FOVring.Thickness = 1.5
FOVring.Color = Color3.fromRGB(100, 150, 255)
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2

local isAiming = false
local isBlatant = false
local isESPEnabled = false
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

-- UI Colors
local accentColor = Color3.fromRGB(100, 150, 255)

-- Table for ESP objects
local ESPObjects = {}

-- Create Rayfield Window
local Window = Rayfield:CreateWindow({
   Name = "Aimbot & ESP",
   LoadingTitle = "Aimbot & ESP",
   LoadingSubtitle = "by YourName",
   ConfigurationSaving = {
      Enabled = false,
   },
   Discord = {
      Enabled = false,
   },
   KeySystem = false,
})

-- Main Tab
local MainTab = Window:CreateTab("Main", 4483362458)

-- Aimbot Section
local AimbotSection = MainTab:CreateSection("Aimbot")

local AimbotToggle = MainTab:CreateToggle({
   Name = "Aimbot",
   CurrentValue = false,
   Flag = "AimbotToggle",
   Callback = function(Value)
      isAiming = Value
      FOVring.Visible = Value
   end,
})

local BlatantToggle = MainTab:CreateToggle({
   Name = "Blatant Mode",
   CurrentValue = false,
   Flag = "BlatantToggle",
   Callback = function(Value)
      isBlatant = Value
   end,
})

local FOVSlider = MainTab:CreateSlider({
   Name = "FOV",
   Range = {0, 200},
   Increment = 1,
   Suffix = "units",
   CurrentValue = fov,
   Flag = "FOVSlider",
   Callback = function(Value)
      fov = Value
      FOVring.Radius = fov
   end,
})

-- ESP Section
local ESPSection = MainTab:CreateSection("ESP")

local ESPToggle = MainTab:CreateToggle({
   Name = "ESP",
   CurrentValue = false,
   Flag = "ESPToggle",
   Callback = function(Value)
      isESPEnabled = Value
      if Value then
         for _, player in ipairs(Players:GetPlayers()) do
            createESP(player)
         end
      else
         for _, esp in pairs(ESPObjects) do
            esp.highlight:Destroy()
            esp.billboard:Destroy()
         end
         ESPObjects = {}
      end
   end,
})

-- ESP Functions
local function createESP(player)
    if player == Player or not player.Character then return end
    local character = player.Character
    local humanoid = character:FindFirstChild("Humanoid")
    local head = character:FindFirstChild("Head")
    if not humanoid or not head then return end

    local highlight = Instance.new("Highlight", character)
    highlight.FillColor = (player.TeamColor and player.TeamColor.Color) or Color3.fromRGB(255, 48, 51)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESPBillboard"
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 100, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = character

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.Position = UDim2.new(0, 0, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextSize = 14
    nameLabel.TextStrokeTransparency = 0.5
    nameLabel.Parent = billboard

    local healthLabel = Instance.new("TextLabel")
    healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
    healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
    healthLabel.BackgroundTransparency = 1
    healthLabel.Text = math.floor(humanoid.Health) .. "/" .. humanoid.MaxHealth
    healthLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    healthLabel.Font = Enum.Font.Gotham
    healthLabel.TextSize = 12
    healthLabel.TextStrokeTransparency = 0.5
    healthLabel.Parent = billboard

    ESPObjects[player] = {highlight = highlight, billboard = billboard}

    local connections = {}
    table.insert(connections, player:GetPropertyChangedSignal("TeamColor"):Connect(function()
        highlight.FillColor = (player.TeamColor and player.TeamColor.Color) or Color3.fromRGB(255, 48, 51)
    end))
    table.insert(connections, humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        healthLabel.Text = math.floor(humanoid.Health) .. "/" .. humanoid.MaxHealth
        healthLabel.TextColor3 = humanoid.Health > 50 and Color3.fromRGB(100, 255, 100) or 
                                humanoid.Health > 20 and Color3.fromRGB(255, 255, 100) or 
                                Color3.fromRGB(255, 100, 100)
        if humanoid.Health <= 0 then
            if ESPObjects[player] then
                ESPObjects[player].highlight:Destroy()
                ESPObjects[player].billboard:Destroy()
                ESPObjects[player] = nil
                for _, conn in ipairs(connections) do
                    conn:Disconnect()
                end
            end
        end
    end))

    player.CharacterAdded:Connect(function(newChar)
        if ESPObjects[player] then
            ESPObjects[player].highlight:Destroy()
            ESPObjects[player].billboard:Destroy()
            ESPObjects[player] = nil
        end
        if isESPEnabled then
            createESP(player)
        end
    end)
end

-- Targeting Functions
local function getValidPlayers()
    local validPlayers = {}
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= Player and 
           otherPlayer.Character and 
           otherPlayer.Character:FindFirstChild("Humanoid") and
           otherPlayer.Character.Humanoid.Health > 0 and
           otherPlayer.Character:FindFirstChild("Head") and
           (otherPlayer.Team ~= Player.Team or not Player.Team) then
            table.insert(validPlayers, otherPlayer.Character)
        end
    end
    return validPlayers
end

local function predictPos(target)
    local head = target:FindFirstChild("Head")
    if not head then return nil end
    if isBlatant then
        return head.Position
    end
    local rootPart = target:FindFirstChild("HumanoidRootPart")
    if not rootPart then return head.Position end
    local velocity = rootPart.Velocity
    local predictionTime = 0.02
    return head.Position + velocity * predictionTime
end

local function getTarget()
    local nearest = nil
    local minDistance = math.huge
    local viewportCenter = Cam.ViewportSize / 2
    raycastParams.FilterDescendantsInstances = {Player.Character}
    
    for _, playerChar in ipairs(getValidPlayers()) do
        local predictedPos = predictPos(playerChar)
        if predictedPos then
            local screenPos, visible = Cam:WorldToViewportPoint(predictedPos)
            if visible and screenPos.Z > 0 then
                local ray = workspace:Raycast(Cam.CFrame.Position, (predictedPos - Cam.CFrame.Position).Unit * 1000, raycastParams)
                if ray and ray.Instance:IsDescendantOf(playerChar) then
                    local distance = (Vector2.new(screenPos.X, screenPos.Y) - viewportCenter).Magnitude
                    if distance < fov and distance < minDistance then
                        minDistance = distance
                        nearest = playerChar
                    end
                end
            end
        end
    end
    return nearest
end

local function aim(targetPosition)
    local currentCF = Cam.CFrame
    if isBlatant then
        Cam.CFrame = CFrame.new(currentCF.Position, targetPosition)
    else
        local targetDirection = (targetPosition - currentCF.Position).Unit
        local smoothFactor = 0.3
        local newLookVector = currentCF.LookVector:Lerp(targetDirection, smoothFactor)
        Cam.CFrame = CFrame.new(currentCF.Position, currentCF.Position + newLookVector)
    end
end

-- Initialize ESP for new players
Players.PlayerAdded:Connect(function(player)
    if isESPEnabled then
        createESP(player)
    end
end)

-- Main Loop
RunService.Heartbeat:Connect(function()
    pcall(function()
        FOVring.Position = Cam.ViewportSize / 2
        FOVring.Radius = fov * (Cam.ViewportSize.Y / 1080)
        
        if isAiming then
            local target = getTarget()
            if target then
                local predictedPosition = predictPos(target)
                if predictedPosition then
                    aim(predictedPosition)
                end
            end
        end
    end)
end)

-- Initialize ESP for existing players
for _, player in ipairs(Players:GetPlayers()) do
    if isESPEnabled then
        createESP(player)
    end
end

Rayfield:LoadConfiguration()
